import os
import logging
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, CallbackContext

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TOKEN")

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
app = Application.builder().token(TOKEN).build()

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –ª–µ–∫—Ü–∏–π
LECTURE_TOPICS = {
    "lec1": "üìö **–í–≤–µ–¥–µ–Ω–∏–µ –≤ Python**\nPython ‚Äî —ç—Ç–æ –º–æ—â–Ω—ã–π, –ø—Ä–æ—Å—Ç–æ–π –≤ –∏–∑—É—á–µ–Ω–∏–∏ —è–∑—ã–∫ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.",
    "lec2": "üìö **–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö**\n–†–∞—Å—Å–º–∞—Ç—Ä–∏–≤–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ Python.",
    "lec3": "üìö **–£—Å–ª–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏**\n–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å `if`, `elif`, `else` –≤ Python.",
}

# –î–∞–Ω–Ω—ã–µ –¥–ª—è –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö
LAB_TOPICS = {
    "lab1": "üõ† **–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ä–µ–¥—ã**\n–ì–¥–µ —Å–∫–∞—á–∞—Ç—å Python –∏ –∫–∞–∫ –µ–≥–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å.",
    "lab2": "üõ† **–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–∞ Python**\n–ü–∏—à–µ–º –ø–µ—Ä–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Å `print()` –∏ `input()`.",
    "lab3": "üõ† **–†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏ –∏ —Å–ø–∏—Å–∫–∞–º–∏**\n–£—á–∏–º—Å—è –º–∞–Ω–∏–ø—É–ª–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–º–∏ –≤ Python.",
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
async def start(update: Update, context: CallbackContext) -> None:
    keyboard = [
        [InlineKeyboardButton("üìö –õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ–º—ã", callback_data="lectures")],
        [InlineKeyboardButton("üõ† –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ç–µ–º—ã", callback_data="labs")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫
async def button_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –ª–µ–∫—Ü–∏–∏
    if query.data == "lectures":
        keyboard = [[InlineKeyboardButton(topic, callback_data=key)] for key, topic in {
            "lec1": "–í–≤–µ–¥–µ–Ω–∏–µ –≤ Python",
            "lec2": "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö",
            "lec3": "–£—Å–ª–æ–≤–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏",
        }.items()]
        keyboard.append([InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back")])
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text("üìö –í—ã–±–µ—Ä–∏—Ç–µ –ª–µ–∫—Ü–∏–æ–Ω–Ω—É—é —Ç–µ–º—É:", reply_markup=reply_markup)

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω—ã –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ
    elif query.data == "labs":
        keyboard = [[InlineKeyboardButton(topic, callback_data=key)] for key, topic in {
            "lab1": "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python",
            "lab2": "–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã",
            "lab3": "–†–∞–±–æ—Ç–∞ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏",
        }.items()]
        keyboard.append([InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back")])
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text("üõ† –í—ã–±–µ—Ä–∏—Ç–µ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—É—é —Ç–µ–º—É:", reply_markup=reply_markup)

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è —Ç–µ–º–∞
    elif query.data in LECTURE_TOPICS:
        await query.edit_message_text(LECTURE_TOPICS[query.data])

    elif query.data in LAB_TOPICS:
        await query.edit_message_text(LAB_TOPICS[query.data])

    # –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    elif query.data == "back":
        keyboard = [
            [InlineKeyboardButton("üìö –õ–µ–∫—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ–º—ã", callback_data="lectures")],
            [InlineKeyboardButton("üõ† –õ–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã–µ —Ç–µ–º—ã", callback_data="labs")],
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:", reply_markup=reply_markup)

# –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
app.add_handler(CommandHandler("start", start))
app.add_handler(CallbackQueryHandler(button_handler))

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

